namespace utterances

import com.amazon.alexa.ask.conversations.utterances
import types.*

// Utterances for the several requests

USetRequestVolunteer0 = utterances(
  samples = [
    "I need help with something",
    "A volunteer, please",
    "Please send me a volunteer",
    "I need a volunteer",
    "I want a volunteer"
  ]
)

USetRequestVolunteer1 = utterances<USetRequestInformServiceAndDateType>(
  samples = [
    "i want  a volunteer for {service} on {date}",
    "i want  a volunteer for {service} for {date}",
    "i want to request a volunteer for {service} on {date}",
    "i want to request a volunteer for {service} for {date}",
    "i need  a volunteer for {service} on {date}",
    "i need  a volunteer for {service} for {date}",
    "i need to request a volunteer for {service} on {date}",
    "i need to request a volunteer for {service} for {date}",
    "find me a volunteer for {service} on {date}",
    "find me a volunteer for {service} for {date}",
    "find a volunteer for {service} on {date}",
    "find a volunteer for {service} for {date}",
    "i want  a volunteer  {date} for {service}",
    "i want  a volunteer on {date} for {service}",
    "i want  a volunteer for {date} for {service}",
    "i want to request a volunteer  {date} for {service}",
    "i want to request a volunteer on {date} for {service}",
    "i want to request a volunteer for {date} for {service}",
    "i need  a volunteer  {date} for {service}",
    "i need  a volunteer on {date} for {service}",
    "i need  a volunteer for {date} for {service}",
    "i need to request a volunteer  {date} for {service}",
    "i need to request a volunteer on {date} for {service}",
    "i need to request a volunteer for {date} for {service}",
    "find me a volunteer  {date} for {service}",
    "find me a volunteer on {date} for {service}",
    "find me a volunteer for {date} for {service}",
    "find a volunteer  {date} for {service}",
    "find a volunteer on {date} for {service}",
    "find a volunteer for {date} for {service}"
  ]
)

USetRequestVolunteer2 = utterances<USetRequestInformAllType>(
  samples = [
    "get me a volunteer {date} at {time} for {service} for {duration}",
    "find a volunteer for {service} , on {date} at {time} for {duration}",
    "I need a volunteer for {service} , {date} at {time} for {duration}"
  ]
)

USetRequestVolunteer3 = utterances<USetRequestInformServiceDateAndTimeType>(
  samples = [
    "get me a volunteer for {service} for {date} at {time}",
    "find a volunteer for {service} for {date} at {time}",
    "I want a volunteer for {service} at {time} {date}",
    "I want a volunteer for {service} at {time} on {date}",
    "i need a volunteer for {service} for {date} at {time}",
    "I want to request a volunteer for {service} for {date} at {time}"
  ]
)

// utterances for recurring requests
USetRequestVolunteer4 = utterances<USetRequestRecurrInformServiceAndDow>(
  samples = [
    "i want  a volunteer for {service} every {dow}",
    "i want  a volunteer for {service} for every {dow}",
    "i want to request a volunteer for {service} every {dow}",
    "i want to request a volunteer for {service} for every {dow}",
    "i need  a volunteer for {service} every {dow}",
    "i need  a volunteer for {service} for every {dow}",
    "i need to request a volunteer for {service} every {dow}",
    "i need to request a volunteer for {service} for every {dow}",
    "find me a volunteer for {service} every {dow}",
    "find me a volunteer for {service} for every {dow}",
    "find a volunteer for {service} every {dow}",
    "find a volunteer for {service} for every {dow}",
    "i want  a volunteer  every {dow} for {service}",
    "i want  a volunteer every {dow} for {service}",
    "i want  a volunteer for every {dow} for {service}",
    "i want to request a volunteer  every {dow} for {service}",
    "i want to request a volunteer every {dow} for {service}",
    "i want to request a volunteer for every {dow} for {service}",
    "i need  a volunteer  every {dow} for {service}",
    "i need  a volunteer every {dow} for {service}",
    "i need  a volunteer for every {dow} for {service}",
    "i need to request a volunteer  every {dow} for {service}",
    "i need to request a volunteer every {dow} for {service}",
    "i need to request a volunteer for every {dow} for {service}",
    "find me a volunteer  every {dow} for {service}",
    "find me a volunteer every {dow} for {service}",
    "find me a volunteer for every {dow} for {service}",
    "find a volunteer  every {dow} for {service}",
    "find a volunteer every {dow} for {service}",
    "find a volunteer for every {dow} for {service}"
  ]
)

USetRequestVolunteer5 = utterances<USetInformDowRequestType>(
  samples = [
    "i want a volunteer every {dow}",
    "i want a volunteer for every {dow}",
    "i want to request a volunteer every {dow}",
    "i want to request a volunteer for every {dow}",
    "i need a volunteer every {dow}",
    "i need a volunteer for every {dow}",
    "i need to request a volunteer every {dow}",
    "i need to request a volunteer for every {dow}",
    "find a volunteer every {dow}",
    "find a volunteer for every {dow}",
    "find me a volunteer every {dow}",
    "find me a volunteer for every {dow}"
  ]
)

USetRequestVolunteer6 = utterances<USetRequestRecurrInformServiceDowAndTime>(
  samples = [
    "get me a volunteer for {service} every {dow} at {time}",
    "find a volunteer for {service} every {dow} at {time}",
    "I want a volunteer for {service} at {time} every {dow}",
    "I want a volunteer for {service} at {time} every {dow}",
    "i need a volunteer for {service} for every {dow} at {time}",
    "I want to request a volunteer for {service} for every {dow} at {time}"
  ]
)


// utterances for informing the arguments

USetInformDate = utterances<USetInformDateRequestType>(
  samples = [
    "for {date}",
    "{date}"
  ]
)

USetInformService = utterances<USetInformServiceRequestType>(
  samples = [
    "to {service}",
    "for {service}",
    "{service}"
  ]
)

USetInformDuration = utterances<USetInformDurationRequestType>(
  samples = [
    "{duration}",
    "for {duration}"
  ]
)

USetInformTime = utterances<USetInformTimeRequestType>(
  samples = [
    "{time}",
    "at {time}"
  ]
)

USetInformTimeAndDuration = utterances<USetInformTimeAndDurationRequestType>(
  samples = [
    "for {duration} at {time}",
    "at {time} for {duration}"
  ]
)

// utterances for informing the arguments of recurring requests

USetInformDow = utterances<USetInformDowRequestType>(
  samples = [
    "every {dow}",
    "on every {dow}",
    "on {dow}",
    "{dow}"
  ]
)

USetInformDowAndTime = utterances<USetInformDowAndTimeRequestType>(
  samples = [
    "every {dow} at {time}",
    "on every {dow} at {time}",
    "on {dow} at {time}",
    "{dow} at {time}"
  ]
)

USetInformDateSince = utterances<USetInformDateRequestType>(
  samples = [
    "since {date}",
    "{date}"
  ]
)

USetInformDateUntil = utterances<USetInformDateRequestType>(
  samples = [
    "until {date}",
    "{date}"
  ]
)

// utterances for confirming the call

USetAffirm = utterances(
  samples = [
    "let's do it",
    "ok",
    "yes"
  ]
)


USetDeny = utterances(
  samples = [
    "no",
    "nopes",
    "not really"
  ]
)